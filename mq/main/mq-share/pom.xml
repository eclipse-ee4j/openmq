<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2011, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.glassfish.mq</groupId>
        <artifactId>mq</artifactId>
        <version>6.1.0-SNAPSHOT</version>
    </parent>

    <artifactId>mq-share</artifactId>

    <name>MQ Shared Module</name>

    <properties>
        <ws.binary.share.dir>../../binary/share</ws.binary.share.dir>
        <findbugs.exclude>${project.basedir}/exclude.xml</findbugs.exclude>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.glassfish.mq</groupId>
            <artifactId>mqcomm-util</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.mq</groupId>
            <artifactId>mqcomm-io</artifactId>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>

                    <!-- Create version.properties & brand-version.properties -->
                    <execution>
                        <id>version.properties</id>
                        <phase>process-sources</phase>
                        <configuration>
                            <target>
                                <tstamp />
                                <delete
                                    file="${project.build.outputDirectory}/com/sun/messaging/jmq/version.properties" />
                                <copy file="src/main/java/com/sun/messaging/jmq/version.template"
                                    tofile="${project.build.outputDirectory}/com/sun/messaging/jmq/version.properties">
                                    <filterset>
                                        <filter token="FULL_NAME" value="${full.name}" />
                                        <filter token="BUILD_NUMBER" value="${build.number}" />
                                        <filter token="BUILD_LETTER" value="${build.letter}" />
                                        <filter token="MAJOR_VERSION" value="${major.version}" />
                                        <filter token="MINOR_VERSION" value="${minor.version}" />
                                        <filter token="MICRO_VERSION" value="${micro.version}" />
                                        <filter token="PRODUCT_VERSION" value="${major.version}.${minor.version}.${micro.version}" />
                                        <filter token="JMS_VERSION" value="${jakarta-jms.version}" />
                                        <filter token="PRODUCT_NAME" value="${product.name}" />
                                        <filter token="PRODUCT_ABBREVNAME" value="${product.abbrevname}" />
                                        <filter token="DATE" value="${TODAY} ${TSTAMP}" />
                                        <filter token="COPYRIGHT" value="${product.copyright}" />
                                    </filterset>
                                </copy>
                                <tstamp />
                                <delete
                                    file="${project.build.outputDirectory}/com/sun/messaging/jmq/brand_version.properties" />
                                <copy file="src/main/java/com/sun/messaging/jmq/brand_version.template"
                                    tofile="${project.build.outputDirectory}/com/sun/messaging/jmq/brand_version.properties">
                                    <filterset>
                                        <filter token="BRAND_NAME" value="${brand.name}" />
                                        <filter token="MAJOR_VERSION" value="${major.version}" />
                                        <filter token="MINOR_VERSION" value="${minor.version}" />
                                        <filter token="MICRO_VERSION" value="${micro.version}" />
                                        <filter token="PRODUCT_VERSION"
                                            value="${major.version}.${minor.version}.${micro.version}" />
                                    </filterset>
                                </copy>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>

                    <!-- Copy classes over to binary/share/opt/classes -->
                    <execution>
                        <phase>process-classes</phase>
                        <configuration>
                            <target>
                                <echo message="Make directory ${ws.binary.share.dir}/opt" />
                                <mkdir dir="${ws.binary.share.dir}/opt/classes" />
                                <echo message="Copy ${project.build.outputDirectory} to ${ws.binary.share.dir}/opt/classes" />
                                <copy todir="${ws.binary.share.dir}/opt/classes/">
                                    <fileset dir="${project.build.outputDirectory}/" />
                                </copy>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
