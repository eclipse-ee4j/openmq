#
# Copyright (c) 2025 Contributors to the Eclipse Foundation
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v. 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0,
# or the Eclipse Distribution License v. 1.0 which is available at
# http://www.eclipse.org/org/documents/edl-v10.php.
#
# SPDX-License-Identifier: EPL-2.0 OR BSD-3-Clause
#

on:
  workflow_call:
    inputs:
      java_version:
        required: true
        type: string
      java_distribution:
        required: false
        type: string
        default: 'temurin'
      java_package:
        required: false
        type: string
        default: 'jre'
      mq_distribution_artifact:
        required: false
        type: string
        default: 'mq-distribution'

jobs:
  test-selector:
    name: Test Message Selector
    runs-on: ubuntu-latest
    env:
      DISTRIBUTION_ROOT: mq-distribution
      MQ_DISTRIBUTION_HOME: mq-distribution/mq
      MQ_VAR_HOME: varhome

    steps:
    - name: Download MQ Distribution
      uses: actions/download-artifact@v5
      with:
        name: ${{ inputs.mq_distribution_artifact }}
    - name: Unzip MQ Distribution
      run: unzip -q -d ${DISTRIBUTION_ROOT} mq.zip
    - name: Set up Java
      uses: actions/setup-java@v5
      with:
        distribution: ${{ inputs.java_distribution }}
        java-version: ${{ inputs.java_version }}
        java-package: ${{ inputs.java_package }}
    - name: Prepare admin passfile
      run: echo imq.imqcmd.password=admin > admin.pass
    - name: Start broker
      run: |
        nohup ${MQ_DISTRIBUTION_HOME}/bin/imqbrokerd \
          -varhome ${MQ_VAR_HOME} >brokerd.log 2>&1 &
    - name: Wait for broker to start
      timeout-minutes: 2
      run: |
        while [ true ]
        do
          grep \
            --with-filename \
            --extended-regexp \
            "Broker .*:7676.* ready" \
            ${MQ_VAR_HOME}/instances/*/log/log.txt && break
          sleep 10s
        done
    - name: Run Consumers
      run: |
        cd ${MQ_DISTRIBUTION_HOME}
        nohup java -cp examples/jms20/selector:lib/jms.jar:lib/imq.jar \
          SelectorConsumerExample \
            selectortopic >receive.log 2>&1 &
    - name: Run Producer
      run: |
        cd ${MQ_DISTRIBUTION_HOME}
        java -cp examples/jms20/selector:lib/jms.jar:lib/imq.jar \
          SelectorProducerExample \
            selectortopic >send.log
    - name: Verify expected messages
      run: |
        for subscriberId in 1 2 3
        do
          expectedMessage="SUBSCRIBER ${subscriberId} THREAD: Message received: That's all the news for today."
          expectedFinish="SUBSCRIBER ${subscriberId} THREAD: Received finished-publishing message"
          grep --silent "${expectedMessage}" ${MQ_DISTRIBUTION_HOME}/receive.log || echo "Missing: ${expectedMessage}" | tee -a missing.log
          grep --silent "${expectedFinish}" ${MQ_DISTRIBUTION_HOME}/receive.log || echo "Missing: ${expectedFinish}" | tee -a missing.log
        done
        test ! -s missing.log
    - name: Stop broker
      timeout-minutes: 2
      if: always()
      run: |
        ${MQ_DISTRIBUTION_HOME}/bin/imqcmd \
          -f \
          -u admin \
          -passfile admin.pass \
          shutdown bkr 2>/dev/null
    - name: Upload logs on failure
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: test-selector-logs
        path: |
          brokerd.log
          ${{ env.MQ_DISTRIBUTION_HOME }}/send.log
          ${{ env.MQ_DISTRIBUTION_HOME }}/receive.log
          missing.log
          ${{ env.MQ_VAR_HOME }}/instances/*/log/log.txt
